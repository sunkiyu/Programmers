#include <string>
#include <vector>

using namespace std;

bool check(string p)
{
    int t{};
    for (size_t i = 0; i < p.length(); i++)
    {
        if (p[i] == '(')
            t++;
        else
        {
            t--;
            if(t<0)
                return false;
        }
    }
    return true;
}

string recursion(string p)
{
    if (p == "")
        return p;

    string u{}, v{};

    int lcnt{}, rcnt{};

    //문자열을 균형잡힌 문자열로 u,v로 분리
    for (size_t i = 0; i < p.length(); i++)
    {
        if (p[i] == '(')
            lcnt++;
        else
            rcnt++;

        if (lcnt == rcnt)
        {
            u = p.substr(0, i + 1);
            v = p.substr(i + 1);
            break;
        }
    }

    //u가 올바른 문자열이라면 
    if (check(u))
        return u + recursion(v);
    else
    {
        string temp{ "(" };
        temp += recursion(v) + ")";
        u = u.substr(1, u.length()-2);

        for (size_t i = 0; i < u.length(); i++)
        {
            if (u[i] == '(')
                temp += ')';
            else
                temp += '(';
        }

        return temp;
    }
}

string solution(string p) {
    string answer = "";
       if (check(p))
        return p;

    return recursion(p);
}
